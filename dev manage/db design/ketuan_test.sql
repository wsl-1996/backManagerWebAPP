-- MySQL Script generated by MySQL Workbench
-- Tue Jul 17 15:13:54 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ketuanDB_test
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `ketuanDB_test` ;

-- -----------------------------------------------------
-- Schema ketuanDB_test
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ketuanDB_test` DEFAULT CHARACTER SET utf8 ;
USE `ketuanDB_test` ;

-- -----------------------------------------------------
-- Table `ketuanDB_test`.`USER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ketuanDB_test`.`USER` ;

CREATE TABLE IF NOT EXISTS `ketuanDB_test`.`USER` (
  `id` VARCHAR(32) NOT NULL,
  `phone` VARCHAR(45) NULL,
  `nickname` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `children` VARCHAR(20000) NULL COMMENT '被推荐用户列表',
  `invite_USER_id` VARCHAR(32) NULL COMMENT '推荐用户id',
  `grade` INT ZEROFILL NULL COMMENT '用户级别\n初级默认为0',
  `head_img_url` VARCHAR(200) NULL COMMENT '头像',
  `balance` DOUBLE ZEROFILL NOT NULL COMMENT '账户余额',
  `openid` VARCHAR(45) NULL COMMENT '微信用户标识',
  `sex` INT NULL,
  `province` VARCHAR(45) NULL,
  `city` VARCHAR(45) NULL,
  `country` VARCHAR(200) NULL,
  `privilege` VARCHAR(45) NULL,
  `unionid` VARCHAR(45) NULL,
  `first_deliver_address` VARCHAR(32) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_USER_USER1_idx` (`invite_USER_id` ASC),
  UNIQUE INDEX `phone_UNIQUE` (`phone` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  CONSTRAINT `fk_USER_USER1`
    FOREIGN KEY (`invite_USER_id`)
    REFERENCES `ketuanDB_test`.`USER` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ketuanDB_test`.`MERCHANT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ketuanDB_test`.`MERCHANT` ;

CREATE TABLE IF NOT EXISTS `ketuanDB_test`.`MERCHANT` (
  `id` VARCHAR(32) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `address` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `accountname` VARCHAR(45) NOT NULL,
  `accoutpass` VARCHAR(45) NOT NULL,
  `discription` VARCHAR(200) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `accountname_UNIQUE` (`accountname` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ketuanDB_test`.`PRODUCT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ketuanDB_test`.`PRODUCT` ;

CREATE TABLE IF NOT EXISTS `ketuanDB_test`.`PRODUCT` (
  `id` VARCHAR(32) NOT NULL,
  `owner_type` INT NOT NULL,
  `product_info` VARCHAR(450) NULL COMMENT '商品信息\njson 封装',
  `price` DOUBLE NOT NULL COMMENT '单价',
  `USER_id` VARCHAR(32) NULL COMMENT '微商提供的货物,微商的用户id\n',
  `MERCHANT_id` VARCHAR(32) NULL COMMENT '商家提供的货物,商家的id',
  `images_address` VARCHAR(4000) NULL COMMENT '所有图片的地址\n;分隔多个图片',
  `star_level` DOUBLE NULL COMMENT '评分\n百分制',
  `pack_stand` VARCHAR(450) NULL COMMENT '包装规格\njson封装',
  `after_sale` VARCHAR(450) NULL COMMENT '售后服务\njson封装',
  `evaluate_label` VARCHAR(200) NULL COMMENT '用户标签\n；号分隔',
  `product_cost` DOUBLE NULL COMMENT '单件成本（包括快递）',
  `product_label` VARCHAR(200) NULL COMMENT '汉子标签\n;分隔',
  `product_classify_code` VARCHAR(45) NULL COMMENT '产品分类代码\n分类代码在服务端文件中存储',
  `product_fist_img` VARCHAR(45) NULL COMMENT '图片id',
  `product_slide_img` VARCHAR(450) NULL COMMENT '商品详情页面滑动图片id列表\n;分隔多个图片',
  `product_produce_province` VARCHAR(45) NULL COMMENT '商品生产省份',
  `product_produce_city` VARCHAR(45) NULL COMMENT '商品发货城市',
  `product_produce_address` VARCHAR(200) NULL COMMENT '商品发货地址',
  `product_name` VARCHAR(100) NULL COMMENT '商品名称',
  `product_state` INT NULL COMMENT '0：未上线\n1：已上线\n2：已下线',
  `online_time` DATETIME NULL,
  `offline_time` DATETIME NULL,
  `sale_volume_history` INT NULL DEFAULT 0,
  `sale_volume_monthly` INT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_PRODUCT_USER1_idx` (`USER_id` ASC),
  INDEX `fk_PRODUCT_MERCHANT1_idx` (`MERCHANT_id` ASC),
  CONSTRAINT `fk_PRODUCT_USER1`
    FOREIGN KEY (`USER_id`)
    REFERENCES `ketuanDB_test`.`USER` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PRODUCT_MERCHANT1`
    FOREIGN KEY (`MERCHANT_id`)
    REFERENCES `ketuanDB_test`.`MERCHANT` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ketuanDB_test`.`GROUP`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ketuanDB_test`.`GROUP` ;

CREATE TABLE IF NOT EXISTS `ketuanDB_test`.`GROUP` (
  `id` VARCHAR(32) NOT NULL,
  `USER_id` VARCHAR(32) NULL COMMENT '开团者用户id',
  `PRODUCT_id` VARCHAR(32) NOT NULL,
  `group_type` INT ZEROFILL NOT NULL DEFAULT 0 COMMENT '团购类型:\n固定团 0 \nor动态团1',
  `group_count` INT ZEROFILL NULL COMMENT '固定团 成团数',
  `offered_count` INT ZEROFILL NOT NULL COMMENT '当前参团人数',
  `group_price` DOUBLE ZEROFILL NOT NULL COMMENT '成团价格',
  `offered_user_id` VARCHAR(2000) NULL COMMENT '参团者',
  `group_state` INT ZEROFILL NOT NULL COMMENT '0：未上线\n1：已上线\n2：已下线',
  `end_time` DATETIME NOT NULL,
  `customer_service` VARCHAR(100) NULL COMMENT '客服列表，可以多个，存储userid\n用；分隔',
  `group_discription` VARCHAR(450) NULL,
  `product_cost` DOUBLE NOT NULL COMMENT '单件成本',
  `deliver_province` VARCHAR(45) NULL COMMENT '发货省份',
  `deliver_city` VARCHAR(45) NULL COMMENT '发货城市',
  `deliver_address` VARCHAR(200) NULL COMMENT '发货地址',
  `group_first_img` VARCHAR(45) NULL COMMENT '团购首页图片id',
  `group_slide_img` VARCHAR(450) NULL COMMENT '详情页滑动图片id\n;分隔多个图片',
  `group_name` VARCHAR(100) NULL COMMENT '团购名称',
  PRIMARY KEY (`id`),
  INDEX `fk_GROUP_USER1_idx` (`USER_id` ASC),
  INDEX `fk_GROUP_PRODUCT1_idx` (`PRODUCT_id` ASC),
  CONSTRAINT `fk_GROUP_USER1`
    FOREIGN KEY (`USER_id`)
    REFERENCES `ketuanDB_test`.`USER` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_GROUP_PRODUCT1`
    FOREIGN KEY (`PRODUCT_id`)
    REFERENCES `ketuanDB_test`.`PRODUCT` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ketuanDB_test`.`TRACK`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ketuanDB_test`.`TRACK` ;

CREATE TABLE IF NOT EXISTS `ketuanDB_test`.`TRACK` (
  `id` VARCHAR(32) NOT NULL,
  `track_number` VARCHAR(45) NOT NULL,
  `track_code` VARCHAR(20) NOT NULL,
  `track` VARCHAR(450) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `track_number_UNIQUE` (`track_number` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ketuanDB_test`.`ORDER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ketuanDB_test`.`ORDER` ;

CREATE TABLE IF NOT EXISTS `ketuanDB_test`.`ORDER` (
  `id` VARCHAR(32) NOT NULL,
  `PRODUCT_id` VARCHAR(32) NOT NULL,
  `GROUP_id` VARCHAR(32) NULL,
  `USER_id` VARCHAR(32) NOT NULL,
  `state` INT ZEROFILL NOT NULL COMMENT '订单状态',
  `send_name` VARCHAR(45) NOT NULL,
  `send_address` VARCHAR(45) NOT NULL,
  `send_zip` VARCHAR(45) NULL,
  `send_tel` VARCHAR(45) NOT NULL,
  `order_time` DATETIME NOT NULL COMMENT '下单时间',
  `paymethod` VARCHAR(20) NOT NULL COMMENT '付款方式',
  `meno` VARCHAR(200) NULL COMMENT '备注说明',
  `total_price` DOUBLE NOT NULL,
  `track_code` VARCHAR(20) NULL COMMENT '快递公司代码',
  `track_id` VARCHAR(32) NOT NULL,
  `pay_time` DATETIME NULL COMMENT '付款时间',
  `deliver_time` DATETIME NULL COMMENT '发货时间',
  `receipt_time` DATETIME NULL COMMENT '收货时间',
  `product_price` DOUBLE NOT NULL,
  `carriage_price` DOUBLE NULL COMMENT '运费',
  PRIMARY KEY (`id`),
  INDEX `fk_ORDERR_PRODUCT1_idx` (`PRODUCT_id` ASC),
  INDEX `fk_ORDERR_GROUP1_idx` (`GROUP_id` ASC),
  INDEX `fk_ORDER_USER1_idx` (`USER_id` ASC),
  INDEX `fk_ORDER_TRACK1_idx` (`track_id` ASC),
  CONSTRAINT `fk_ORDERR_PRODUCT1`
    FOREIGN KEY (`PRODUCT_id`)
    REFERENCES `ketuanDB_test`.`PRODUCT` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ORDERR_GROUP1`
    FOREIGN KEY (`GROUP_id`)
    REFERENCES `ketuanDB_test`.`GROUP` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ORDER_USER1`
    FOREIGN KEY (`USER_id`)
    REFERENCES `ketuanDB_test`.`USER` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ORDER_TRACK1`
    FOREIGN KEY (`track_id`)
    REFERENCES `ketuanDB_test`.`TRACK` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ketuanDB_test`.`SENDADDRESS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ketuanDB_test`.`SENDADDRESS` ;

CREATE TABLE IF NOT EXISTS `ketuanDB_test`.`SENDADDRESS` (
  `id` VARCHAR(32) NOT NULL,
  `country` VARCHAR(45) NULL,
  `province` VARCHAR(45) NULL,
  `city` VARCHAR(45) NULL,
  `districts` VARCHAR(45) NULL COMMENT '区县',
  `street` VARCHAR(45) NULL COMMENT '街道',
  `address_detail` VARCHAR(100) NOT NULL,
  `send_name` VARCHAR(45) NOT NULL COMMENT '接收人',
  `send_phone` VARCHAR(45) NOT NULL COMMENT '接收人电话',
  `USER_id` VARCHAR(32) NOT NULL COMMENT '所属用户的id',
  `zip` VARCHAR(45) NULL COMMENT '邮政编码',
  PRIMARY KEY (`id`, `USER_id`),
  INDEX `fk_SENDADDRESS_USER1_idx` (`USER_id` ASC),
  CONSTRAINT `fk_SENDADDRESS_USER1`
    FOREIGN KEY (`USER_id`)
    REFERENCES `ketuanDB_test`.`USER` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ketuanDB_test`.`MESSAGE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ketuanDB_test`.`MESSAGE` ;

CREATE TABLE IF NOT EXISTS `ketuanDB_test`.`MESSAGE` (
  `id` VARCHAR(32) NOT NULL,
  `message_type` INT ZEROFILL NOT NULL COMMENT '消息类型：\n0、互动信息\n1、系统信息',
  `content_type` INT ZEROFILL NOT NULL COMMENT '内容类型\n1、纯文本\n2、图片\n3、图文\n4、语音',
  `time` DATETIME NOT NULL COMMENT '消息推送时间',
  `from_USER_id` VARCHAR(32) NOT NULL,
  `to_USER_id` VARCHAR(32) NOT NULL,
  `state` INT ZEROFILL NOT NULL COMMENT '状态\n0、未读\n1、已读\n2、重点标记',
  `content` VARCHAR(450) NULL COMMENT 'json格式封装的信息\n可以有图片,文字,表情',
  PRIMARY KEY (`id`),
  INDEX `fk_MESSAGE_USER1_idx` (`from_USER_id` ASC),
  INDEX `fk_MESSAGE_USER2_idx` (`to_USER_id` ASC),
  CONSTRAINT `fk_MESSAGE_USER1`
    FOREIGN KEY (`from_USER_id`)
    REFERENCES `ketuanDB_test`.`USER` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_MESSAGE_USER2`
    FOREIGN KEY (`to_USER_id`)
    REFERENCES `ketuanDB_test`.`USER` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ketuanDB_test`.`IMAGE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ketuanDB_test`.`IMAGE` ;

CREATE TABLE IF NOT EXISTS `ketuanDB_test`.`IMAGE` (
  `id` VARCHAR(32) NOT NULL,
  `url` VARCHAR(100) NOT NULL,
  `discription` VARCHAR(100) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ketuanDB_test`.`COMMENT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ketuanDB_test`.`COMMENT` ;

CREATE TABLE IF NOT EXISTS `ketuanDB_test`.`COMMENT` (
  `id` VARCHAR(32) NOT NULL,
  `comment_content` VARCHAR(200) NULL,
  `attach_imgs` VARCHAR(200) NULL COMMENT '附件图片列表\n图片id列表，\n用；分隔',
  `USER_id` VARCHAR(32) NOT NULL,
  `PRODUCT_id` VARCHAR(32) NULL,
  `GROUP_id` VARCHAR(32) NULL,
  `star_level` INT NULL DEFAULT 5,
  `reply` VARCHAR(200) NULL COMMENT '售后回复',
  `evaluate_label` VARCHAR(100) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_COMMENT_USER1_idx` (`USER_id` ASC),
  INDEX `fk_COMMENT_PRODUCT1_idx` (`PRODUCT_id` ASC),
  INDEX `fk_COMMENT_GROUP1_idx` (`GROUP_id` ASC),
  CONSTRAINT `fk_COMMENT_USER1`
    FOREIGN KEY (`USER_id`)
    REFERENCES `ketuanDB_test`.`USER` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_COMMENT_PRODUCT1`
    FOREIGN KEY (`PRODUCT_id`)
    REFERENCES `ketuanDB_test`.`PRODUCT` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_COMMENT_GROUP1`
    FOREIGN KEY (`GROUP_id`)
    REFERENCES `ketuanDB_test`.`GROUP` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ketuanDB_test`.`CASHBACK_CALCULATE_STAND`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ketuanDB_test`.`CASHBACK_CALCULATE_STAND` ;

CREATE TABLE IF NOT EXISTS `ketuanDB_test`.`CASHBACK_CALCULATE_STAND` (
  `id` VARCHAR(32) NOT NULL,
  `suit_level` INT NOT NULL COMMENT '适应用户等级',
  `suit_type` INT NOT NULL COMMENT '适应类型,不同类型不同的计算算法',
  `calculate_rate` DOUBLE NULL,
  `period_date` DATETIME NOT NULL COMMENT '有效截止日期',
  `cashback_limit` DOUBLE NULL COMMENT '固定的返现额度，\n针对特定商品',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ketuanDB_test`.`CASHBACK`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ketuanDB_test`.`CASHBACK` ;

CREATE TABLE IF NOT EXISTS `ketuanDB_test`.`CASHBACK` (
  `id` VARCHAR(32) NOT NULL,
  `sum` DOUBLE NOT NULL DEFAULT 0.0 COMMENT '返现金额',
  `ORDER_id` VARCHAR(32) NOT NULL,
  `cashback_USER_id` VARCHAR(32) NOT NULL,
  `consume_USER_id` VARCHAR(32) NOT NULL,
  `date` DATETIME NOT NULL,
  `paybacked` INT NOT NULL DEFAULT 0 COMMENT '是否已经返现至用户账户\n0:否\n1:是',
  `CASHBACK_CALCULATE_STAND_id` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_CASHBACK_ORDER1_idx` (`ORDER_id` ASC),
  INDEX `fk_CASHBACK_USER1_idx` (`cashback_USER_id` ASC),
  INDEX `fk_CASHBACK_USER2_idx` (`consume_USER_id` ASC),
  INDEX `fk_CASHBACK_CASHBACK_CALCULATE_STAND1_idx` (`CASHBACK_CALCULATE_STAND_id` ASC),
  CONSTRAINT `fk_CASHBACK_ORDER1`
    FOREIGN KEY (`ORDER_id`)
    REFERENCES `ketuanDB_test`.`ORDER` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CASHBACK_USER1`
    FOREIGN KEY (`cashback_USER_id`)
    REFERENCES `ketuanDB_test`.`USER` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CASHBACK_USER2`
    FOREIGN KEY (`consume_USER_id`)
    REFERENCES `ketuanDB_test`.`USER` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CASHBACK_CASHBACK_CALCULATE_STAND1`
    FOREIGN KEY (`CASHBACK_CALCULATE_STAND_id`)
    REFERENCES `ketuanDB_test`.`CASHBACK_CALCULATE_STAND` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
